import Head from "next/head";
import { useState } from "react";
import { Container } from "../components/sharedstyles";
import styled from "styled-components";

export default function Home() {
  const [input, setInput] = useState("");
  const [result, setResult] = useState();

  async function onSubmit(event) {
    event.preventDefault();
    try {
      const response = await fetch("/api/generate", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ input: input }),
      });

      const data = await response.json();
      if (response.status !== 200) {
        throw data.error || new Error(`Request failed with status ${response.status}`);
      }

      setResult(data.result);
      console.log(data.result);
      setInput("");
    } catch (error) {
      // Consider implementing your own error handling logic here
      console.error(error);
      alert(error.message);
    }
  }

  return (
    <Container>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Title>OpenAI PoC</Title>
      <Logo src='/logo.png' />
      <Result>{result}</Result>
      <Form onSubmit={onSubmit}>
        <InputField type='text' value={input} onChange={(e) => setInput(e.target.value)} />
        <SubmitButton type='submit' value={"Submit"} />
      </Form>
    </Container>
  );
}

const Title = styled.h1`
  margin-bottom: 20px;
  font-size: 20px;
  text-align: center;
  text-decoration: none;
`;

const Logo = styled.img`
  margin-bottom: 30px;
  width: 80px;
`;

const Result = styled.div`
  margin-bottom: 20px;
`;

const Form = styled.form`
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
`;

const InputField = styled.input`
  margin-bottom: 30px;
  padding: 12px;
  border-radius: 8px;
  border: 2px solid #ccc;
  font-size: 16px;
  transition: border-color 0.2s ease-in-out;

  &:focus {
    border-color: #1e90ff;
    outline: none;
  }
`;

const SubmitButton = styled.input`
  padding: 12px;
  border-radius: 8px;
  border: none;
  background-color: #1e90ff;
  color: #fff;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;

  &:hover {
    background-color: #0066cc;
  }
`;
